name: CI/CD Pipeline # Define the name of the workflow.

on:
  push:
    branches: [ "main" ] # Trigger the workflow on push events to the 'main' branch.
  pull_request:
    branches: [ "main" ] # Trigger the workflow when a pull request is made targeting the 'main' branch.

jobs:
  test: # Job for Unit Testing
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code # Checkout the source code from the repository
        uses: actions/checkout@v3

      - name: Set up JDK 21 # Set up Java Development Kit version 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven' # Cache Maven dependencies

      - name: Cache Maven packages # Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven # Build the project
        run: mvn -B package --file pom.xml

      - name: Run Tests # Run Unit Tests
        run: mvn -B test

  build-and-push: # Job to Build and Push Docker Image
    name: Build and Push
    runs-on: ubuntu-latest
    needs: [test] # Runs only after tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Dockerize & Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: noyandocker/workpermission
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}